name: Build and deploy .NET Core application to Web App api-geo-dev
on:
  push:
    branches:
    - main
env:
  AZURE_API_WEBAPP_NAME: api-geo-dev
  AZURE_UI_WEBAPP_NAME: ui-geo-dev
  AZURE_WEBAPP_API_PACKAGE_PATH: Backend/WorkManagement.Api/publish
  AZURE_WEBAPP_FRONTEND_PACKAGE_PATH: Frontend/build
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: Backend/WorkManagement.Api
  FRONTEND_WORKING_DIRECTORY: Frontend
jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js environment
      uses: actions/setup-node@v4.1.0
    - name: Install dependencies
      run: npm install
      working-directory: ${{ env.FRONTEND_WORKING_DIRECTORY }}
    - name: Build React app
      run: npm run build
      working-directory: ${{ env.FRONTEND_WORKING_DIRECTORY }}
    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend
        path: ${{ env.AZURE_WEBAPP_FRONTEND_PACKAGE_PATH }}
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: frontend
        path: ${{ env.AZURE_WEBAPP_FRONTEND_PACKAGE_PATH }}
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_UI_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_UI_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_FRONTEND_PACKAGE_PATH }}
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore "${{ env.WORKING_DIRECTORY }}"
    - name: Build
      run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Publish
      run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_API_PACKAGE_PATH }}"
    - name: Publish Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_API_PACKAGE_PATH }}
  deploy-backend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_API_PACKAGE_PATH }}
    - name: Deploy to Azure WebApp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_API_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_API_PACKAGE_PATH }}
